# Example environment variables for local development
# Copy this to `.env` and fill in values for your local machine. Do NOT commit `.env` with real secrets.

# -----------------------------
# DATABASE / Postgres (Prisma)
# -----------------------------
# Prisma expects a DATABASE_URL in the form:
#   postgresql://USER:PASSWORD@HOST:PORT/DATABASE
# Example (safe dummy for local dev):
DATABASE_URL=postgresql://postgres:pgpassword@localhost:5432/alms

# You can alternatively provide individual Postgres variables which are used by the
# Postgres Docker service (docker-compose). These are optional for the app itself if
# DATABASE_URL already contains the full connection string, but docker-compose may
# read them to initialize the container.
POSTGRES_USER=postgres
POSTGRES_PASSWORD=pgpassword
POSTGRES_DB=alms

# -----------------------------
# AUTH
# -----------------------------
# JWT secret used by backend to sign and verify tokens. Use a long random string.
# Example generation (Node): node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=replace_with_a_strong_random_jwt_secret

# -----------------------------
# FRONTEND / BACKEND URLs & PORTS
# -----------------------------
# Frontend reads NEXT_PUBLIC_API_URL to know where the backend API is.
# When running via docker-compose.full.yml in this repo the backend container listens on
# port 3000 while the compose file maps it to host port 3001 (so the frontend uses http://localhost:3001).
NEXT_PUBLIC_API_URL=http://localhost:3001

# Backend app port (used by some local scripts). The container typically runs the app on 3000.
PORT=3001

# Frontend dev port (Next.js). Dockerfile.dev sets PORT=5000 for the container.
NEXT_PUBLIC_PORT=5000

# -----------------------------
# OPTIONAL / THIRD-PARTY
# -----------------------------
# Add placeholders for integrations you use (S3, SMTP, Redis, etc.)
# S3_BUCKET=your-bucket
# S3_REGION=your-region
# S3_ACCESS_KEY_ID=AKIA...
# S3_SECRET_ACCESS_KEY=...

# -----------------------------
# QUICK NOTES
# -----------------------------
# - Keep secrets out of source control. Use this file as a template only.
# - On Windows PowerShell you can copy the example with:
#     Copy-Item .env.example .env -Force
#   On Unix/macOS:
#     cp .env.example .env
# - If you change the Prisma schema, run `npx prisma generate` to (re)generate @prisma/client.
#   The backend Dockerfile attempts to run `prisma generate` during build; if that fails,
#   run it manually inside the backend container or locally.
# - docker-compose.backend.yml / backend/docker-compose.yml will read POSTGRES_* variables
#   if present. If you prefer, keep credentials only in DATABASE_URL.

